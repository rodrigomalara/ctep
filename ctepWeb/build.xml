<project name="lojistaWeb" default="help">

	<property environment="env" />

	<!-- Local system paths -->
	<property name="distpath.project" value="dist" />
	<property name="warfile" value="${distpath.project}/${ant.project.name}.war" />
	<property name="workspace.path" value="${basedir}/.." />
	<property name="shared.libs" value="${workspace.path}/lib/sharedlib"/>
	<property name="webinf.libs" value="${workspace.path}/lib/WEB-INFlib"/>
	<property name="common.libs" value="${workspace.path}/lib/commonlib"/>
	<property name="tomcat.home" value="${workspace.path}/apache-tomcat-5.5.26"/>
	<property name="servicesdir" value="services"/>
	

	<!-- Project settings -->
	<property name="webapp.home" value="WebContent/WEB-INF" />
	<property name="classes.home" value="${webapp.home}/classes" />
	<property name="libs.home" value="${webapp.home}/lib" />

	<property file="etc/build.properties" />

	<!-- classpath -->
	<path id="lojistaWeb.classpath">
		<fileset dir="${shared.libs}">
		  <include name="*.jar" />
    <!--  <exclude name="testlet.jar"/>
          <exclude name="xerces.jar"/> -->
		</fileset>
		
		<fileset dir="${webinf.libs}">
		  <include name="*.jar" />
		<!--  <exclude name="testlet.jar"/>
		      <exclude name="xerces.jar"/> -->
		</fileset>
		
		<fileset dir="${libs.home}">
		  <include name="*.jar" />
    <!--  <exclude name="testlet.jar"/>
	        <exclude name="xerces.jar"/> -->
		</fileset>
		
		<pathelement location="${tomcat.home}/common/lib/servlet-api.jar" />
		<pathelement location="${tomcat.home}/common/lib/jsp-api.jar" />
		<pathelement location="${common.libs}/catalina.jar" />
		<pathelement location="${common.libs}/catalina-optional.jar" />
		<pathelement location="${common.libs}/commons-logging-1.1.1.jar" />
	</path>

	<!-- Check timestamp on files -->
	<target name="prepare">
		<tstamp />
	</target>

	<target name="build-dependencies">
		<!-- cria os jars dependentes -->
		<ant antfile="${workspace.path}/gourmExUtils/build.xml"            inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/pedidoServices/build.xml"          inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/PedidoServicesPojoImpl/build.xml"  inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/contextServices/build.xml"         inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/contextServicesPojoImpl/build.xml" inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/gourmExNotificacoes/build.xml"     inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/ibatisDAOs/build.xml"              inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/gourmExMonitor/build.xml"          inheritAll="false" target="all"/>
		<ant antfile="${workspace.path}/gourmExTomcatConfig/build.xml"          inheritAll="false" target="all"/>
	</target>

	<target name="clean-dependencies">
		<!-- cria os jars dependentes -->
		<ant antfile="${workspace.path}/gourmExUtils/build.xml"            inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/pedidoServices/build.xml"          inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/PedidoServicesPojoImpl/build.xml"  inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/contextServices/build.xml"         inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/contextServicesPojoImpl/build.xml" inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/gourmExNotificacoes/build.xml"     inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/ibatisDAOs/build.xml"              inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/gourmExMonitor/build.xml"          inheritAll="false" target="clean"/>
		<ant antfile="${workspace.path}/gourmExTomcatConfig/build.xml"          inheritAll="false" target="clean"/>
	</target>


	<!-- Copy any resource or configuration files -->
	<target name="resources">
		<copy todir="${classes.home}" includeEmptyDirs="no">
			<fileset dir="./src">
				<patternset>
					<include name="**/*.conf" />
					<!-- <include name="**/*.properties"/> -->
					<include name="**/*.xml" />
				</patternset>
			</fileset>
		</copy>
	</target>


	<!-- Normal build of application -->
	<target name="compile" depends="prepare,resources,build-dependencies">
		<javac fork="true" srcdir="src" destdir="${classes.home}" excludes="**/tests/*" debug="true">
			<classpath refid="lojistaWeb.classpath" />
		</javac>
		<copy todir="${classes.home}">
			<fileset dir="src" includes="MessageResources*properties" />
		</copy>
		
	</target>

	<!-- Remove classes directory for clean build -->
	<target name="clean" description="Prepare for clean build" depends="clean-dependencies">
		<delete dir="${classes.home}" />
		<delete dir="${distpath.project}" />
		<mkdir dir="${classes.home}" />
		<mkdir dir="${distpath.project}" />
	</target>

	<!-- Build entire project -->
	<target name="project" depends="clean,prepare,compile" />

	<!-- Create binary distribution -->
	<target name="dist" description="Create binary distribution">
		<war warfile="${warfile}" >
			<fileset dir="${basedir}/WebContent" />
			<exclude name=".*" />
			<exclude name=".properties" />
			<lib dir="${webinf.libs}" />
		</war>
	</target>
	

	<!-- Build project and create distribution-->
	<target name="all" depends="project,dist" />

	<target name="help">
		<echo message="all:            Clears all and rebuilds the WAR file" />
	</target>

</project>
